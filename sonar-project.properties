# SonarQube/SonarCloud Project Configuration for Salesverse Backend
# High Quality Code Standards Configuration

# Project Information
sonar.projectKey=salesverse-be
sonar.projectName=Salesverse Backend
sonar.projectVersion=1.0.0

sonar.host.url=http://47.128.201.161:9000
sonar.token=sqp_5fffb86fd66b3a713052c38ed38d7346ebcc0e5d

# Source and Test Configuration
sonar.sources=src
sonar.tests=tests
sonar.language=ts
sonar.sourceEncoding=UTF-8

# TypeScript Configuration
sonar.typescript.tsconfigPath=tsconfig.json

# Coverage Configuration - Consolidated and Fixed
sonar.coverage.reportPaths=coverage/lcov.info
sonar.test.coverage.reportPaths=coverage/lcov.info
sonar.typescript.lcov.reportPaths=coverage/lcov.info
sonar.javascript.lcov.reportPaths=coverage/lcov.info

# Enable coverage processing
sonar.coverage.enabled=true
sonar.test.coverage.enabled=true

# Coverage Configuration - High Standards
sonar.coverage.minimum=80
sonar.coverage.main.threshold=85
sonar.coverage.service.threshold=90
sonar.coverage.repository.threshold=85
sonar.coverage.controller.threshold=80
sonar.coverage.middleware.threshold=85

# Test Coverage Requirements - Strict
sonar.test.coverage.minimum=80
sonar.test.coverage.main.threshold=85
sonar.test.coverage.service.threshold=90
sonar.test.coverage.repository.threshold=85
sonar.test.coverage.controller.threshold=80
sonar.test.coverage.middleware.threshold=85

# Coverage Exclusions - Updated to be more specific
sonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/__tests__/**,**/*.d.ts,**/tests/**,**/node_modules/**,**/dist/**,**/build/**,**/*.config.{js,mjs,ts},**/jest.config.ts,**/nodemon.json,**/commitlint.config.mjs,**/coverage/**,**/coverage/**/*

# File Exclusions
sonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/coverage/**,**/*.min.js,**/.swc/**,**/logs/**,**/*.config.{js,mjs,ts},**/.*rc.{js,mjs,ts},**/jest.config.ts,**/nodemon.json,**/commitlint.config.mjs,**/package-lock.json,**/yarn.lock,**/.git/**

# Test Exclusions
sonar.test.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/coverage/**

# Quality Gate - Must Pass All Checks
sonar.qualitygate.wait=true

# Memory and Performance Settings
sonar.javascript.node.maxspace=16384
sonar.typescript.node.maxspace=16384

# =============================================================================
# HIGH QUALITY CODE RULES
# =============================================================================

# Complexity Thresholds - Strict but Achievable
sonar.javascript.complexity.function.threshold=10
sonar.typescript.complexity.function.threshold=10
sonar.javascript.maxstatements.function.threshold=50
sonar.typescript.maxstatements.function.threshold=50
sonar.javascript.maxstatements.class.threshold=200
sonar.typescript.maxstatements.class.threshold=200

# Duplication Detection - Strict
sonar.cpd.javascript.minimumtokens=50
sonar.cpd.typescript.minimumtokens=50
sonar.cpd.javascript.minimumlines=5
sonar.cpd.typescript.minimumlines=5

# Security Hotspots - High Standards
sonar.security.safeguards.prioritized=true
sonar.security.hotspots.reviewed.percentage=100
sonar.security.hotspots.reviewed.rating=A

# =============================================================================
# RELIABILITY RATINGS - HIGH STANDARDS
# =============================================================================
# A = 0 bugs (Perfect)
# B = 1-2 bugs (Good)
# C = 3-5 bugs (Acceptable)
# D = 6-10 bugs (Poor)
# E = 10+ bugs (Unacceptable)

sonar.javascript.reliability.rating.A=0
sonar.javascript.reliability.rating.B=2
sonar.javascript.reliability.rating.C=5
sonar.javascript.reliability.rating.D=10
sonar.javascript.reliability.rating.E=11

sonar.typescript.reliability.rating.A=0
sonar.typescript.reliability.rating.B=2
sonar.typescript.reliability.rating.C=5
sonar.typescript.reliability.rating.D=10
sonar.typescript.reliability.rating.E=11

# =============================================================================
# MAINTAINABILITY RATINGS - HIGH STANDARDS
# =============================================================================
# A = 0-10 issues (Excellent)
# B = 11-20 issues (Good)
# C = 21-50 issues (Acceptable)
# D = 51-100 issues (Poor)
# E = 100+ issues (Unacceptable)

sonar.javascript.maintainability.rating.A=0
sonar.javascript.maintainability.rating.B=10
sonar.javascript.maintainability.rating.C=20
sonar.javascript.maintainability.rating.D=50
sonar.javascript.maintainability.rating.E=100

sonar.typescript.maintainability.rating.A=0
sonar.typescript.maintainability.rating.B=10
sonar.typescript.maintainability.rating.C=20
sonar.typescript.maintainability.rating.D=50
sonar.typescript.maintainability.rating.E=100

# =============================================================================
# SECURITY RATINGS - ZERO TOLERANCE FOR VULNERABILITIES
# =============================================================================
# A = 0 vulnerabilities (Perfect)
# B = 1 vulnerability (Good)
# C = 2-3 vulnerabilities (Acceptable)
# D = 4-6 vulnerabilities (Poor)
# E = 6+ vulnerabilities (Unacceptable)

sonar.javascript.security.rating.A=0
sonar.javascript.security.rating.B=1
sonar.javascript.security.rating.C=3
sonar.javascript.security.rating.D=6
sonar.javascript.security.rating.E=7

sonar.typescript.security.rating.A=0
sonar.typescript.security.rating.B=1
sonar.typescript.security.rating.C=3
sonar.typescript.security.rating.D=6
sonar.typescript.security.rating.E=7

# =============================================================================
# CODE SMELL THRESHOLDS - STRICT
# =============================================================================

# Function and Method Limits
sonar.javascript.maxstatements.function.threshold=50
sonar.typescript.maxstatements.function.threshold=50
sonar.javascript.maxstatements.class.threshold=200
sonar.typescript.maxstatements.class.threshold=200

# Parameter Limits
sonar.javascript.maxparameters.function.threshold=5
sonar.typescript.maxparameters.function.threshold=5

# Nesting Limits
sonar.javascript.maxnesting.threshold=4
sonar.typescript.maxnesting.threshold=4

# =============================================================================
# ISSUE EXCLUSIONS - REDUCED FOR BETTER QUALITY DETECTION
# =============================================================================

# Multiple criteria for issue exclusions - Only essential exclusions
sonar.issue.ignore.multicriteria=e1,e2,e3,e4,e5,e6

# E1: Exclude console.log statements (handled by ESLint)
sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S1066
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts

# E2: Exclude magic numbers in test files only
sonar.issue.ignore.multicriteria.e2.ruleKey=typescript:S109
sonar.issue.ignore.multicriteria.e2.resourceKey=**/*.test.ts

# E3: Exclude magic numbers in config files only
sonar.issue.ignore.multicriteria.e3.ruleKey=typescript:S109
sonar.issue.ignore.multicriteria.e3.resourceKey=**/*.config.{js,mjs,ts}

# E4: Exclude function complexity in test files only
sonar.issue.ignore.multicriteria.e4.ruleKey=typescript:S1542
sonar.issue.ignore.multicriteria.e4.resourceKey=**/*.test.ts

# E5: Exclude function length in test files only
sonar.issue.ignore.multicriteria.e5.ruleKey=typescript:S138
sonar.issue.ignore.multicriteria.e5.resourceKey=**/*.test.ts

# E6: Exclude unused parameters prefixed with underscore
sonar.issue.ignore.multicriteria.e6.ruleKey=typescript:S1172
sonar.issue.ignore.multicriteria.e6.resourceKey=**/*.ts

# =============================================================================
# SCM CONFIGURATION
# =============================================================================

sonar.scm.provider=git
sonar.scm.disabled=false

# =============================================================================
# ADVANCED ANALYSIS SETTINGS
# =============================================================================

# Enable advanced analysis features
sonar.typescript.advanced.analysis=true
sonar.javascript.advanced.analysis=true

# Enable semantic analysis
sonar.typescript.semantic.analysis=true
sonar.javascript.semantic.analysis=true

# Enable cross-file analysis
sonar.typescript.cross.file.analysis=true
sonar.javascript.cross.file.analysis=true

# =============================================================================
# REPORTING AND NOTIFICATIONS
# =============================================================================

# Enable detailed reporting
sonar.reporting.detailed=true

# Enable quality gate notifications
sonar.qualitygate.notifications=true

# Enable security hotspot notifications
sonar.security.hotspots.notifications=true

# =============================================================================
# ORGANIZATION AND PROJECT SETTINGS (FOR SONARCLOUD)
# =============================================================================

# Uncomment and configure for SonarCloud
# sonar.organization=your-organization-key
# sonar.projectKey=your-organization-key_salesverse-be

# =============================================================================
# CUSTOM QUALITY PROFILES (OPTIONAL)
# =============================================================================

# Uncomment to use custom quality profiles
# sonar.qualityprofile=High-Standard-TypeScript
# sonar.qualityprofile.javascript=High-Standard-JavaScript

# =============================================================================
# DEPLOYMENT AND CI/CD INTEGRATION
# =============================================================================

# Enable pull request analysis
sonar.pullrequest.analysis=true

# Enable branch analysis
sonar.branch.analysis=true

# Enable new code analysis
sonar.newcode.analysis=true

# =============================================================================
# FINAL QUALITY GATE CONFIGURATION
# =============================================================================

# Quality Gate must pass ALL conditions
sonar.qualitygate.wait=true
sonar.qualitygate.fail.on.error=true

# Coverage thresholds for quality gate
sonar.coverage.qualitygate.minimum=80
sonar.duplicated_lines.qualitygate.minimum=3
sonar.reliability_rating.qualitygate.minimum=A
sonar.security_rating.qualitygate.minimum=A
sonar.maintainability_rating.qualitygate.minimum=A
sonar.security_hotspots_reviewed.qualitygate.minimum=100

# =============================================================================
# TEST QUALITY REQUIREMENTS
# =============================================================================

# Test coverage quality gate requirements
sonar.test.coverage.qualitygate.minimum=80
sonar.test.coverage.qualitygate.main.threshold=85
sonar.test.coverage.qualitygate.service.threshold=90
sonar.test.coverage.qualitygate.repository.threshold=85
sonar.test.coverage.qualitygate.controller.threshold=80
sonar.test.coverage.qualitygate.middleware.threshold=85

# Test execution quality gate
sonar.test.execution.qualitygate.minimum=90
sonar.test.success.rate.qualitygate.minimum=95

# Test execution report
sonar.test.execution.reportPaths=coverage/sonar-report.xml

# =============================================================================
# QUALITY GATE FAILURE CONDITIONS
# =============================================================================

# Fail the pipeline if quality gate fails
sonar.qualitygate.fail.on.error=true
sonar.qualitygate.fail.on.warning=false

# Specific failure conditions
sonar.coverage.fail.on.error=true
sonar.test.coverage.fail.on.error=true
sonar.security.fail.on.error=true
sonar.reliability.fail.on.error=true
sonar.maintainability.fail.on.error=true 